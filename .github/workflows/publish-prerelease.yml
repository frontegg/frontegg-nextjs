name: Publish Pre-Release to NPM
on:
  # When standard Pull Request is merged
  pull_request:
    branches:
      - master
    types: [closed]
jobs:
  createReleasePullRequest:
    if: "!contains(join(github.event.pull_request.labels.*.name, ','), 'Release') && github.event.pull_request.merged == true"
    runs-on: ubuntu-latest
    container: cypress/browsers:node14.17.0-chrome88-ff89
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: '0'
      - name: Git Identity
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/$GITHUB_REPOSITORY
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Install Dependencies and Build Packages
        run: |
          yarn install
          yarn build
      - name: Git Identity
        run: |
          git config --global user.name 'frontegg'
          git config --global user.email 'frontegg@users.noreply.github.com'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Authenticate with Registry
        run: |
          yarn logout
          echo "init-author-name=Frontegg LTD" > .npmrc
          echo "init-author-email=hello@frontegg.com" >> .npmrc
          echo "init-author-url=https://frontegg.com" >> .npmrc
          echo "init-license=MIT" >> .npmrc
          echo "always-auth=true" >> .npmrc
          echo "registry=https://registry.npmjs.org" >> .npmrc
          echo "_authToken=$NPM_TOKEN" >> .npmrc
          echo "@frontegg:registry=https://registry.npmjs.org" >> .npmrc
          echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> .npmrc
          npm whoami
        env:
          NPM_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}
      - name: Commit Version UP
        run: |
          yarn increment-version
          git add . && git commit -m "chore(release): publish `node -p 'require("./libs/nextjs/package.json").version'`"
      - name: Set current CHANGELOG to output
        id: changelog
        shell: bash -ex {0}
        run: |
          version=$(node -p 'require("./libs/nextjs/package.json").version')
          echo "::set-output name=version::${version}"
      - name: Create Release Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v3.5.1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          path: ${{ secrets.GITHUB_WORKSPACE }}
          commit-message: 'Update v${{ steps.changelog.outputs.version }}'
          committer: GitHub <noreply@github.com>
          author: '${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>'
          title: 'v${{ steps.changelog.outputs.version }}'
          body: |
            # v${{ steps.changelog.outputs.version }}

          labels: 'Type: Release'
          branch: 'release/next'

      - name: Publish Pre-Release version to NPM
        id: publish_pre_release_version
        run: |
          version=$(node -p 'require("./libs/nextjs/package.json").version')
          echo "::set-output name=LIB_VERSION::${version}"
          echo "Publishing Pre-Release version - v${version}-alpha.${{ github.run_id }}"
          node -p "(function(){var fs = require('fs'); var pkg = JSON.parse(fs.readFileSync('./dist/libs/nextjs/package.json', {encoding: 'utf8'})); pkg.version = '${version}-alpha.${{ github.run_id }}'; fs.writeFileSync('./dist/libs/nextjs/package.json', JSON.stringify(pkg, null, 2),  {encoding: 'utf8'})})()"
          cp .npmrc ./dist/libs/nextjs/
          cp .npmignore ./dist/libs/nextjs/
          cp README.md ./dist/libs/nextjs/
          cd ./dist/libs/nextjs && npm publish --tag next
        env:
          NPM_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}

      - name : Notify Slack on alpha version deployment
        uses : rtCamp/action-slack-notify@v2
        env :
          SLACK_CHANNEL : frontegg-alpha-versions
          SLACK_COLOR : ${{ job.status }}
          SLACK_ICON : https://avatars.githubusercontent.com/u/67857107?s=40&v=4
          SLACK_MESSAGE : '${{ steps.publish_pre_release_version.outputs.LIB_VERSION }}-alpha.${{ github.run_id }} has been released :rocket:'
          SLACK_TITLE : 'A new @frontegg/nextjs alpha version!'
          SLACK_USERNAME : ${{ github.actor }}
          SLACK_WEBHOOK : ${{ secrets.ROTEM_SLACK_WEBHOOK }}
          MSG_MINIMAL: true
